# ABCDE Configuration for Raspberry Pi Auto-Ripper
# Place this file at ~/.abcde.conf or /etc/abcde.conf

# CD device
CDROM=/dev/sr0

# Output directory - change this to your network mount point if desired
OUTPUTDIR="/mnt/GRIMRIPPER"

# Output type and quality
OUTPUTTYPE="flac,mp3"
FLACENCODERSYNTAX=flac
FLACOPTS='--verify --best'
MP3ENCODERSYNTAX=lame
LAMEOPTS='-V0 --vbr-new'

# Actions to perform
ACTIONS=cddb,read,encode,tag,move,clean

# Non-interactive mode
INTERACTIVE=n

# Use cdparanoia for better error correction
CDROMREADERSYNTAX=cdparanoia            
CDPARANOIA=cdparanoia  
CDPARANOIAOPTS="--never-skip=40"

# Don't eject automatically (we handle ejection in Python)
EJECTCD=n

# Padding for track numbers
PADTRACKS=y
OUTPUTFORMAT='${ARTISTFILE}/${ALBUMFILE}/${TRACKNUM} - ${TRACKFILE}'

# Album art
GLYRC=glyrc
GLYRCOPTS=
ALBUMARTFILE="folder.jpg"
ALBUMARTTYPE="JPEG"

# CDDB/MusicBrainz settings with fallback
CDDBMETHOD=musicbrainz,cddb
CDDBURL="http://musicbrainz.org/ws/2"
CDDBSUBMIT=n
CDDBLOCALDIR="$HOME/.cddb"
CDDBLOCALRECURSIVE=y
CDDBCOPYLOCAL=y

# Fallback CDDB servers if MusicBrainz fails
CDDBAVAIL=cddb.cddb.com,freedb.freedb.org

# Don't abort on CDDB failure - continue with track numbers
CDDBFUZZY=y

# Character translations for safe filenames
mungefilename ()
{
    echo "$@" | sed -e 's/^\.*//' -e 's/[^A-Za-z0-9._-]/_/g' -e 's/__*/_/g' -e 's/_$//g' -e 's/^_//g'
}

# Pre and post encode functions (use home directory for logs)
pre_read ()
{
    echo "$(date): Starting to rip: $CDDBDATA" >> ~/.abcde.log
}

post_encode ()
{
    echo "$(date): Completed rip: $OUTPUTDIR/$ARTISTFILE/$ALBUMFILE" >> ~/.abcde.log
    
    # Optional: notify completion (uncomment if you want notifications)
    # echo "CD rip completed: $ARTISTFILE - $ALBUMFILE" | wall
}

# Encoding threads (adjust based on Pi CPU)
MAXPROCS=2
